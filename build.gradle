apply plugin:'groovy'
apply plugin:'idea'
apply plugin:'maven'

group = 'org.waman.gluino'
version = 0.1

def jdkVersion = '1.8'
def enc = 'UTF-8'

sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion
tasks.withType(Compile){ options.encoding = enc }

repositories.mavenCentral()

dependencies {
    compile "org.codehaus.groovy:groovy-all:2.2.1"
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
}

uploadArchives {
    repositories{
        mavenDeployer {
            repository(url: "file://$projectDir/../repo")
       }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = 1.11
}

task generateExtensionModuleDescriptor << {
    String servicesDir = "$project.projectDir/src/main/resources/META-INF/services"
    ant.mkdir dir:servicesDir

    def extensionClasses = [
        'org.waman.gluino.nio.PathFactoryExtension',
        'org.waman.gluino.nio.PathOperatorExtension',
        'org.waman.gluino.nio.PathAccessorExtension',
        'org.waman.gluino.nio.FileInfoAccessorExtension',
        'org.waman.gluino.nio.FileOperationExtension',
        'org.waman.gluino.nio.ByteIOExtension',
        'org.waman.gluino.nio.CharIOExtension',
        'org.waman.gluino.nio.FileVisitorExtension',
        
        'org.waman.gluino.nio.PathMatcherExtension'
    ]

    def staticExtensionClasses = [
        'org.waman.gluino.nio.NioStaticExtension',
        'org.waman.gluino.nio.GNioStaticExtension'
    ]

    def moduleDescriptor = new File("$servicesDir/org.codehaus.groovy.runtime.ExtensionModule")
    if(!moduleDescriptor.exists())moduleDescriptor.createNewFile()

    // ***** module descriptor content *****
    moduleDescriptor.text = """\
moduleName=$project.name
moduleVersion=$project.version
extensionClasses=${extensionClasses.join(',')}
staticExtensionClasses = ${staticExtensionClasses.join(',')}
"""
    ant.echo("Output file : $moduleDescriptor.path")
}

processResources.dependsOn generateExtensionModuleDescriptor
compileGroovy.dependsOn generateExtensionModuleDescriptor